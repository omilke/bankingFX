/*
 * This file is generated by jOOQ.
 */
package de.omilke.banking.persistence.jooq.meta;


import de.omilke.banking.persistence.jooq.meta.tables.Entry;
import de.omilke.banking.persistence.jooq.meta.tables.RecurringEntry;
import de.omilke.banking.persistence.jooq.meta.tables.records.EntryRecord;
import de.omilke.banking.persistence.jooq.meta.tables.records.RecurringEntryRecord;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of
 * the <code>PUBLIC</code> schema.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<EntryRecord, Long> IDENTITY_ENTRY = Identities0.IDENTITY_ENTRY;
    public static final Identity<RecurringEntryRecord, Long> IDENTITY_RECURRING_ENTRY = Identities0.IDENTITY_RECURRING_ENTRY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EntryRecord> CONSTRAINT_3 = UniqueKeys0.CONSTRAINT_3;
    public static final UniqueKey<RecurringEntryRecord> CONSTRAINT_D = UniqueKeys0.CONSTRAINT_D;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<EntryRecord, Long> IDENTITY_ENTRY = Internal.createIdentity(Entry.ENTRY, Entry.ENTRY.ID);
        public static Identity<RecurringEntryRecord, Long> IDENTITY_RECURRING_ENTRY = Internal.createIdentity(RecurringEntry.RECURRING_ENTRY, RecurringEntry.RECURRING_ENTRY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<EntryRecord> CONSTRAINT_3 = Internal.createUniqueKey(Entry.ENTRY, "CONSTRAINT_3", new TableField[]{Entry.ENTRY.ID}, true);
        public static final UniqueKey<RecurringEntryRecord> CONSTRAINT_D = Internal.createUniqueKey(RecurringEntry.RECURRING_ENTRY, "CONSTRAINT_D", new TableField[]{RecurringEntry.RECURRING_ENTRY.ID}, true);
    }
}
